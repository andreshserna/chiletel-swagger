openapi: 3.0.0
info:
  version: "1.0.0"
  title: "User Management Service API"
  description: "API for managing customers, technicians, and crews."
  termsOfService: http://swagger.io/terms/
  contact:
    email: juan.hernandez.serna@segurosbolivar.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://chiletel.management/api/v1
tags:
  - name: Customer
    description: Operations related to Customers
  - name: Technician
    description: Operations related to Technicians
  - name: Crew
    description: Operations related to Crews
  
paths:
  /customers:
    get:
      tags:
        - Customer
      summary: "List all customers"
      description: "Returns list of costumers"

      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: "Bad request"
        '404':
          description: "Customers not found"
    post:
      tags:
        - Customer
      summary: "Add a new customer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: "Customer added successfully"
        '400':
          description: "Bad request"
        '409':
          description: "Conflict, customer already exists"
          
  /technicians:
    get:
      tags:
        - Technician
      summary: "List all technicians"
      description: "Returns list of technicians"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Technician'
        '400':
          description: "Bad request"
        '404':
          description: "Technicians not found"
    post:
      tags:
        - Technician
      summary: "Add a new technician"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Technician'
      responses:
        '201':
          description: "Technician added successfully"
        '400':
          description: "Bad request"
        '409':
          description: "Conflict, technician already exists"
    put:
      tags:
        - Technician
      summary: "Update an existing technician"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Technician'
      responses:
        '200':
          description: "Technician updated successfully"
        '400':
          description: "Bad request"
        '404':
          description: "Technician not found"
          
  /technicians/{id}:
    get:
      tags:
        - Technician
      summary: Find technician by ID
      description: Returns a single technician identidied by technicianId
      parameters:
        - name: technicianId
          in: path
          description: ID of technician to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Technician'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Technician not found
            
  /crews:
    get:
      tags:
        - Crew
      summary: "List all crews"
      description: "Returns list of crews"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Crew'
        '400':
          description: "Bad request"
        '404':
          description: "Crews not found"
    post:
      tags:
        - Crew
      summary: "Add a new crew"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crew'
      responses:
        '201':
          description: "Crew added successfully"
        '400':
          description: "Bad request"
        '409':
          description: "Conflict, crew already exists"
    put:
      tags:
        - Crew
      summary: "Update an existing crew"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crew'
      responses:
        '200':
          description: "Crew updated successfully"
        '400':
          description: "Bad request"

  /technician-specialities:
    get:
      tags:
        - TechnicianSpeciality
      summary: "List all technician specialities"
      description: "Returns list of technician specialities"

      responses:
        '200':
            description: "Successful operation"
            content:
              application/json:
                schema:
                  type: array
                  items:
                  $ref: '#/components/schemas/TechnicianSpeciality'
        '400':
           description: "Bad request"
        '404':
          description: "Technicians specialities not found"
    post:
      tags:
        - TechnicianSpeciality
      summary: "Add a new technician speciality"
      description: "Add new specialitiy to a technician"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TechnicianSpeciality'
      responses:
        '201':
          description: "Technician speciality added successfully"
        '400':
          description: "Bad request"
        '409':
          description: "Conflict, technician speciality already exists"

  /technician-specialities/{damageId}:
    get:
      tags:
        - TechnicianSpeciality
      summary: Find technician by damage ID
      description: Returns a list of technicians who resolve damage identidied by damageId
      parameters:
        - name: damageId
          in: path
          description: ID of damage to search technicians for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/TechnicianSpeciality'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Technician not found
            
  /damages:
    get:
          tags:
            - Damage
          summary: "List all damages"
          description: "Returns list of damages"

          responses:
            '200':
              description: "Successful operation"
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Damage'
            '400':
              description: "Bad request"
            '404':
              description: "Damages not found"
components:
  schemas:
    Customer:
      type: object
      properties:
        customerId:
          type: integer
        name:
          type: string
        address:
          type: string
        district:
          type: string
        documentType:
          type: string
        document:
          type: string
        type:
          type: string
          enum: [Hospital, 'Entidad pública', VIP, Comercial, Común]
    Technician:
      type: object
      properties:
        technicianId:
          type: integer
        name:
          type: string
        document:
          type: string
        crewId:
          type: integer
    Crew:
      type: object
      properties:
        crewId:
          type: integer
        zone:
          type: string
    TechnicianSpeciality:
      type: object
      properties:
        technicianId:
          type: integer
        damageId:
          type: integer
    Damage:
      type: object
      properties:
        damageId: 
          type: integer
        description:
          type: string
        priority:
          type: integer
        estimatedDuration:
          type: object
